{"version":3,"file":"static/js/618.d2ff97a8.chunk.js","mappings":"sNAiBA,QAZA,WACE,MAAM,OAAEA,IAAWC,EAAAA,EAAAA,MAEnB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAA,KAAGG,MAAO,CAAEC,UAAW,UAAWC,SAAC,eAAeA,UACpEL,EAAAA,EAAAA,KAACM,EAAAA,GAAK,CAACC,QAAST,EAAOO,SACnBG,IAAiBR,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACX,OAAQU,OAI/C,EAIAE,eAAeC,IACb,MAAMC,QAAiBC,MAAM,gCAE7B,GAAKD,EAASE,GAWP,CAEL,aADsBF,EAASG,QAChBjB,MACjB,CATE,MAAMiB,EAAAA,EAAAA,IACJ,CAAEC,QAAS,2BACX,CACEC,OAAQ,KAOhB,CAEO,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAM,CACXrB,OAAQa,KAEZ,C","sources":["pages/Events.js"],"sourcesContent":["import { Suspense } from 'react';\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\n\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n  const { events } = useLoaderData();\n\n  return (\n    <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\n      <Await resolve={events}>\n        {(loadedEvents) => <EventsList events={loadedEvents} />}\n      </Await>\n    </Suspense>\n  );\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n    //   status: 500,\n    // });\n    throw json(\n      { message: 'Could not fetch events.' },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n\nexport function loader() {\n  return defer({\n    events: loadEvents(),\n  });\n}\n"],"names":["events","useLoaderData","_jsx","Suspense","fallback","style","textAlign","children","Await","resolve","loadedEvents","EventsList","async","loadEvents","response","fetch","ok","json","message","status","loader","defer"],"sourceRoot":""}